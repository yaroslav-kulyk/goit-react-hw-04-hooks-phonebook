{"version":3,"sources":["components/ContactList/ContactListItem.module.css","components/ContactList/ContactList.module.css","App.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","onFormSubmit","useState","name","setName","number","setNumber","handleChange","event","target","value","reset","className","s","form","onSubmit","preventDefault","label","type","pattern","title","required","input","onChange","button","Filter","filter","filterInput","ContactListItem","onContactDelete","item","onClick","ContactList","contacts","contactList","map","id","shortid","require","App","JSON","parse","window","localStorage","getItem","setContacts","setFilter","useEffect","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","contact","includes","container","find","alert","newContact","generate","state","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eacd3bf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__2-uBk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2lFhJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2RznH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3I1DU\",\"label\":\"ContactForm_label__Oik5x\",\"input\":\"ContactForm_input__TxttH\",\"button\":\"ContactForm_button__3YyhW\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onFormSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onFormSubmit({ name, number });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={s.input}\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={s.filterInput}\n    ></input>\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ name, number, onContactDelete }) => {\n  return (\n    <div className={s.item}>\n      {name}: {number}\n      <button type=\"button\" onClick={onContactDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onContactDelete: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import ContactListItem from './ContactListItem';\nimport PropTypes, { arrayOf } from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onContactDelete }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => {\n        return (\n          <li key={id}>\n            <ContactListItem\n              name={name}\n              number={number}\n              onContactDelete={() => onContactDelete(id)}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  ),\n  onContactDelete: PropTypes.func,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\nimport s from './App.module.css';\n\nconst shortid = require('shortid');\n\nexport default function App() {\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} already in contacts`);\n      return;\n    }\n\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    setContacts(state => [...state, newContact]);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(state => state.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <div className={s.container}>\n      <h1>Phonebook</h1>\n      <ContactForm onFormSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onContactDelete={deleteContact} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1HKj1\",\"filterInput\":\"Filter_filterInput__3bgE0\"};"],"sourceRoot":""}